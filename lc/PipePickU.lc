module Holotype where

type FB = FrameBuffer 1 '[ 'Color (Vec 4 Int)]

scene :: String -> FB -> FB
scene name prevFB =
  Accumulate    ((ColorOp NoBlending (one :: Vec 4 Bool)))
  (mapFragments (\(uv, rgba) -> ((rgba)))
   $ rasterizePrimitives (TriangleCtx CullFront PolygonFill NoOffset LastVertex) (Flat, Flat)
   $ mapPrimitives
    (\(pos, uv, id)->
      ( (Uniform "viewProj" :: Mat 4 4 Float) *. (V4 pos%x pos%y 0 1)
      , uv
      , (V4 0 0 0 id)))
    $ fetch name ( Attribute "position"   :: Vec 3 Float
                 , Attribute "uv"         :: Vec 2 Float
                 , Attribute "id"         :: Int))
  prevFB

main :: Output
main = ScreenOut $
       scene "portStream" $
       FrameBuffer ((colorImage1 (V4 0 0 0 0)))

-- Local Variables:
-- eval: (progn (haskell-mode) (intero-disable))
-- End:
