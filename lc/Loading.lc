quadPosition =
  [ V2 1 1, V2 1    (-1), V2 (-1) (-1)
  , V2 1 1, V2 (-1) (-1), V2 (-1) 1
  ]

quadUV =
  [ V2 1 0, V2 1 1, V2 0 1
  , V2 1 0, V2 0 1, V2 0 0
  ]

quadStream = fetchArrays (quadPosition,quadUV)

makeFrame (texture :: Texture)
          (prims :: PrimitiveStream Triangle (Vec 2 Float,Vec 2 Float))

    = imageFrame ((emptyColorImage (V4 0 0 1.0 1)))
  `overlay`
      prims
    & mapPrimitives (\(p,uv) -> (V4 p%x p%y (-1) 1, uv))
    & rasterizePrimitives (TriangleCtx CullNone PolygonFill NoOffset LastVertex) ((Smooth))
    & mapFragments (\((uv)) -> ((texture2D (Sampler PointFilter MirroredRepeat texture) uv)))
    & accumulateWith ((ColorOp NoBlending (V4 True True True True)))

main = renderFrame $
   makeFrame (Texture2DSlot "LoadingImage")
             quadStream
